# Generated by roxygen2: do not edit by hand

S3method(UXlink,Method)
S3method(clean,Method)
S3method(dumpExperiment,Experiment)
S3method(fit,AlternatedLFMMMethod)
S3method(fit,AlternatedSvdLFMMMethod)
S3method(fit,ClassicLinearMethod)
S3method(fit,FAMTMethod)
S3method(fit,LassoLFMMMethod)
S3method(fit,LeaLFMMMethod)
S3method(fit,NuclearLFMMMethod)
S3method(fit,PCAClassicLinearMethod)
S3method(fit,RidgeLFMMMethod)
S3method(fit,SVAMethod)
S3method(fit,finalLfmmRdigeMethod)
S3method(fit,refractorMethod)
S3method(imputation_error,Method)
S3method(loglr,ClassicLinearMethod)
S3method(loss,Method)
S3method(plot,ComparisonExperiment)
S3method(plot,CrossValidationExperiment)
S3method(plot,DataSet)
S3method(plot,DebugExperiment)
S3method(plot,FDRControlExperiment)
S3method(plot,GenerativeDataSet)
S3method(plot,Method)
S3method(plot,PCAExperiment)
S3method(prediction_error,Method)
S3method(print,Experiment)
S3method(print,Method)
S3method(print,Sampler)
S3method(run,AlternatedLFMMMethod)
S3method(run,AlternatedSvdLFMMMethod)
S3method(run,ClassicLinearMethod)
S3method(run,FAMTMethod)
S3method(run,LassoLFMMMethod)
S3method(run,LeaLFMMMethod)
S3method(run,Method)
S3method(run,NuclearLFMMMethod)
S3method(run,PCAClassicLinearMethod)
S3method(run,RidgeLFMMMethod)
S3method(run,SVAMethod)
S3method(run,refractorMethod)
S3method(runExperiment,ComparisonExperiment)
S3method(runExperiment,CrossValidationExperiment)
S3method(runExperiment,DebugExperiment)
S3method(runExperiment,FDRControlExperiment)
S3method(runExperiment,PCAExperiment)
S3method(sampl,FromTrueSampler)
S3method(sampl,LogisticSampler)
S3method(sampl,MafFilterSampler)
S3method(sampl,MissingValueSampler)
S3method(sampl,NormalSampler)
S3method(sampl,NormalSampler2)
S3method(sampl,RandomXSampler)
S3method(sampl,SparseMissingValueSampler)
S3method(sampl,TrueSampler)
S3method(sampl,VarFilterSampler)
export(AlternatedLFMMMethod)
export(AlternatedSvdLFMMMethod)
export(AnalyticSigma2Functor)
export(BioConductorDep)
export(Bootstrap)
export(ChisqScore)
export(ClassicLinearMethod)
export(ComparisonExperiment)
export(CrossValidationExperiment)
export(DataSet)
export(DebugExperiment)
export(Experiment)
export(FAMTMethod)
export(FDRControlExperiment)
export(FdrtoolsCalibratedZscore)
export(FromTrueSampler)
export(Functor)
export(GenerativeDataSet)
export(GifCalibratedZscore)
export(LassoLFMMMethod)
export(LeaLFMMMethod)
export(LikelyhoodRatio)
export(LogisticSampler)
export(MadBSigma2Functor)
export(MadCalibratedZscore)
export(MafFilterSampler)
export(Method)
export(MissingValueSampler)
export(NormalSampler)
export(NormalSampler2)
export(NormalZscore)
export(NuclearLFMMMethod)
export(PCAClassicLinearMethod)
export(PCAExperiment)
export(PairedBoostrap)
export(RandomXSampler)
export(RidgeLFMMMethod)
export(SVAMethod)
export(Sampler)
export(SparseMissingValueSampler)
export(TrueDataSet)
export(TrueSampler)
export(UXlink)
export(VarFilterSampler)
export(Zscore)
export(acp)
export(bootstrapIt)
export(clean)
export(dumpExperiment)
export(finalBench)
export(finalFamtMethod)
export(finalLEAMethod)
export(finalLfmmRdigeMethod)
export(finalLm)
export(finalOracle)
export(finalPcaLm)
export(finalRefactorMethod)
export(finalSVAMethod)
export(fit)
export(getBenchmarkDb)
export(gif)
export(imputation_error)
export(imputeByMean)
export(imputeByZero)
export(imputeMeanDataSet)
export(imputeZeroDataSet)
export(initBenchmark)
export(lm_zscore)
export(loglr)
export(long_gwas_riz)
export(loss)
export(missingValueImputationLoop)
export(name.Functor)
export(name.GenerativeDataSet)
export(name.Method)
export(name.NormalSampler)
export(name.NormalSampler2)
export(new_file)
export(new_nb)
export(phenotypeWayReg_glm_score)
export(prediction_error)
export(refractorMethod)
export(residualBootstrapLFMM)
export(residualBootstrapLFMMWithMissing)
export(residualBootstrapLM)
export(retrieveExperiment)
export(run)
export(runExperiment)
export(sampl)
export(zero)
import(dplyr)
import(ggplot2)
import(tibble)
import(tidyr)
importFrom(foreach,"%:%")
importFrom(foreach,"%do%")
importFrom(foreach,"%dopar%")
importFrom(foreach,foreach)
importFrom(magrittr,"%>%")
